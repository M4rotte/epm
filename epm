#!/bin/sh

SELF="$(readlink -f ${0})"
CONFIG="/etc/epm/epm.cfg"
source "$CONFIG"

echo " * IP:            $(hostname -i)"
echo " * Configuration: ${CONFIG}"
grep -Ev '^$|^#' "${CONFIG}" |sed -e 's/^/    - /'
echo " * Processes:"
ps -o ppid,pid,user,group,args |tail -n +2

init_db() {
    sv_database_file=$(basename "${SERVICE_DATABASE}")
    sv_database_directory=$(dirname "${SERVICE_DATABASE}")
    [ -d "$sv_database_directory" ] || { echo "Creating directory '$sv_database_directory'" && mkdir -p "$sv_database_directory" ; }
    [ -f "sv_database_file" ] || { echo "Creating database '$sv_database_file'" && ptable > "${SERVICE_DATABASE}"; }
}

trim() { echo -e "$1" | tr -d '[:space:]'; }

ptable() { ps -o ppid,pid,user,group,etime,time,comm,stat,args |tail -n +2; }

is_running() {
   # is_running(service)
   sv_args=$(get_value StartCmd $1)
   ptable | grep -Eq '^.* '"$sv_args"'$'
}

get_pid() {
    # get_pid(service_args)
    ptable | grep -E '^.* '"$1"'$' |awk '{print $2}'

}

get_value() {
    # get_value(key, service)
    echo $(grep '^'"$1"' ' "${SERVICE_DIRECTORY}/$2.conf" | awk '{sub($1 FS,"")}1')
}

get_stop_cmd() {
    # get_stop_cmd(service)
    stop_cmd=$(get_value StopCmd $1)
    start_cmd=$(get_value StartCmd $1)
    [ -z "$stop_cmd" ] && stop_cmd='kill -15 '$(get_pid "$start_cmd")
    echo "$stop_cmd"
}

get_name() {
    # get_name(service)
    echo $(basename $1) | sed -e 's/\'"${SERVICE_FILE_EXTENSION}"'$//'
}

check() {

    total_sv=0
    ok_sv=0
    
    for service in ${SERVICE_DIRECTORY}/*.conf; do
        total_sv=$(($total_sv + 1))
        sv_name=$(get_name $service)
        desired_state=$(trim "$(get_value DesiredState $sv_name)")
	    echo "Checking $sv_name: DesiredState=$desired_state"
            if is_running $sv_name
            then echo " * Service $sv_name is running."
                 case $desired_state in
                     stopped)
                         stop_cmd="$(get_stop_cmd $sv_name)"
                         echo "Stopping service $sv_name with \`$stop_cmd\`"
                         eval $stop_cmd &
                     ;;
                     running)
                         ok_sv=$(($pk_sv + 1))
                     ;;
                 esac
            else echo " * Service $sv_name is stopped."
                 case $desired_state in
                     running)
                         start_cmd="$(get_value StartCmd $sv_name)"
                         echo "Restarting service $sv_name with \`$start_cmd\`"
                         eval $start_cmd &
                     ;;
                     stopped)
                         ok_sv=$(($pk_sv + 1))
                     ;;
                 esac
            fi
        done
        
        echo 
        sleep ${PROCESS_CHECK_PERIOD}
}

eval $(get_value StartCmd foo) &
eval $(get_value StartCmd bar) &
eval $(get_value StartCmd baz) &

sleep 2

while true; do check "${SELF}"; done


