#!/bin/sh
# /lib/epm/epmdb-lib

# $EPM_DB_SEP: field separator, default is '|'
# $EPM_DB: file name, must not be empty

db_key_exists() {
    grep_re='^'"$1"'.*\'"$EPM_DB_SEP"'.*$'
    grep -qE "$grep_re" "$EPM_DB"
}

db_update() {
    # db_update(key,value)
    echo " → db_update($1,$2)"
    tmp_file=/tmp/$RANDOM-$$
    awk_cmd='{if ($1 ~ "^'"$1"'$") { printf "%s%s%s\n",$1,"'"$EPM_DB_SEP"'","'"$2"'" } else {print $0} }'
    awk_ifs="$EPM_DB_SEP"
    #~ echo awk -F$awk_ifs "$awk_cmd" "$EPM_DB"
    awk -F$awk_ifs "$awk_cmd" "$EPM_DB" > $tmp_file && mv $tmp_file "$EPM_DB"
}

db_insert() {
    # db_insert(key,value)
    echo " → db_insert($1,$2)"
    printf "%s%s%s\n" "$1" "$EPM_DB_SEP" "$2" >> "$EPM_DB"
}

db_store() {
    # db_store(key,value) # upsert
    if db_key_exists "$1"; then
        db_update "$1" "$2"
    else
        db_insert "$1" "$2"
    fi
}

db_clean() {
    #~ echo "Before the cleaning: $(wc -l "$EPM_DB")"
    tmp_file=/tmp/$RANDOM-$$
    sort -u "$EPM_DB"> $tmp_file
    cat $tmp_file > "$EPM_DB"
    rm $tmp_file
    echo "$(wc -l < "$EPM_DB") records in database"
}

db_get() { 
    grep_re='^'"$1${EPM_DB_SEP}"'.*$'
    grep "$grep_re" "$EPM_DB" |cut -d${EPM_DB_SEP} -f 2-
}
